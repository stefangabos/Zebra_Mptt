<?php

namespace ZebraTests\Utility;

use mysqli;
use PDO;
use Zebra\DatabaseDriver\PDODriver;

/**
 * Created by PhpStorm.
 * User: writ3it
 * Date: 06.09.19
 * Time: 21:38
 */
class InMemoryDriver extends PDODriver implements DatabaseHelperMethods
{
    private $db;
    private $aiPK = [];

    public function __construct()
    {
        $this->db = new PDO("sqlite::memory:");
        $this->db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        parent::__construct($this->db);
    }

    public function insert($tableName, $columns, $values)
    {
        if (!in_array('id',$columns)){
            $columns[] = 'id';
            $this->ensureAI($tableName);
            $values[] = $this->getAI($tableName);
        }
        return parent::insert($tableName, $columns, $values); // TODO: Change the autogenerated stub
    }

    public function lockTableForWrite($tableName)
    {
        return true;
    }

    public function unlockAllTables()
    {
        return true;
    }

    public function tableExists(string $tableName):bool
    {
        try {
            $result = $this->db->query("SELECT 1 FROM {$tableName} LIMIT 1");
        } catch (\PDOException $e) {
            return FALSE;
        }
        return $result !== FALSE;
    }

    public function close()
    {
        $this->db = null;
        parent::close();
    }

    private function ensureAI($tableName)
    {
        if (!array_key_exists($tableName, $this->aiPK)){
            $this->aiPK[$tableName] = 0;
        }
    }

    private function getAI($tableName)
    {
        return ++$this->aiPK[$tableName];
    }

}